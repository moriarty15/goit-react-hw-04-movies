{"version":3,"sources":["Components/Navigation/Navigation.module.css","Components/MovieDetailsPage/MovieDetailsPage.module.css","Components/Cast/Cast.module.css","Components/HomePage/HomePage.js","Components/MoviesPage/MoviesPage.js","Components/Navigation/Navigation.js","Components/NotFoundView.js","Components/Cast/Cast.js","Components/Reviews/Reviews.js","Components/MovieDetailsPage/MovieDetailsPage.js","App.js","index.js"],"names":["module","exports","HomePage","films","map","id","original_title","name","to","MoviesPage","onSubmit","found","useState","search","setSearch","e","preventDefault","trim","type","onChange","value","target","length","Navigation","exact","className","s","link","activeClassName","activeLink","NotFoundView","Cast","cast","profile_path","character","style","contain","images","src","alt","Reviews","reviews","author","content","MovieDetailsPage","url","useRouteMatch","movieId","useParams","movie","setMovie","setCast","setReviews","useEffect","a","fetch","response","json","status","alert","console","log","fetchById","getCast","allCast","getReviews","results","title","release_date","slice","poster_path","vote_average","overview","genres","onClick","path","App","setFilms","setFound","FetchPopularFilms","FetchFilmsByRequest","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b777c9c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2yV6x\",\"activeLink\":\"Navigation_activeLink__2dbfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MovieDetailsPage_title__1iO4x\",\"overview\":\"MovieDetailsPage_overview__wS3o7\",\"images\":\"MovieDetailsPage_images__15f59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"Cast_images__NYXL9\",\"contain\":\"Cast_contain__1gB_a\"};","import { Link } from \"react-router-dom\";\r\n\r\nexport default function HomePage({ films }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {films.map(({id, original_title, name }) => {\r\n          return (\r\n            <li key={id}>\r\n              <Link to={`/movies/${id}`}>{original_title ?? name}</Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function MoviesPage({onSubmit, found}) {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const inputChange = (e) => {\r\n    e.preventDefault();\r\n    const value = e.target.value.trim();\r\n    if (value === \"\") return;\r\n    setSearch(value);\r\n    };\r\n    \r\n    const searchButton = e => {\r\n        e.preventDefault();\r\n        if (search.trim() === \"\") {\r\n            return\r\n        }\r\n        onSubmit(search);\r\n        setSearch(\"\");\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={searchButton}>\r\n        <button type=\"submit\">Search</button>\r\n        <input onChange={inputChange} />\r\n      </form>\r\n\r\n      {found.length > 0 && <ul>\r\n        {found.map(({ original_title, name, id }) => {\r\n          return (<li key={id}>\r\n          <Link to={`/movies/${id}`}>{original_title ?? name }</Link>\r\n          </li>)\r\n        })}\r\n      </ul>}\r\n    </>\r\n  );\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./Navigation.module.css\"\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink exact to='/' className={s.link} activeClassName={s.activeLink}>Home</NavLink>\r\n      <NavLink to='/movies' className={s.link} activeClassName={s.activeLink}>Movies</NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\n","export default function NotFoundView() {\r\n    return <h1>404 Страница не найдена</h1>\r\n}","import style from \"./Cast.module.css\"\r\n\r\nexport default function Cast({ cast }) {\r\n    return (<>{cast.length !== 0 && (\r\n            <ul>\r\n              {cast.map(({ profile_path, id, name, character }) => {\r\n                return (\r\n                  <div key={id} className={style.contain}>\r\n                    <li>\r\n                      <img\r\n                        className={style.images}\r\n                        src={profile_path ? `https://www.themoviedb.org/t/p/w220_and_h330_face${profile_path}` : \"https://www.publicdomainpictures.net/pictures/280000/velka/not-found-image-15383864787lu.jpg\"}\r\n                        alt=\"img\"\r\n                      />\r\n                      <span>Name: {name}</span>\r\n                      <p>Character: {character}</p>\r\n                    </li>{\" \"}\r\n                  </div>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}</>)\r\n}","export default function Reviews({reviews}) {\r\n    return (<>\r\n        <ul>\r\n            {reviews.map(({author, content}) => {\r\n                return <li key={author}>\r\n                    <h3>{author}</h3>\r\n                    <p>{content }</p>\r\n                </li>\r\n            })}\r\n    </ul>\r\n    </>)\r\n}","import { useParams, Switch, Route } from \"react-router\";\r\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport style from \"./MovieDetailsPage.module.css\";\r\nimport Cast from \"../Cast\";\r\nimport Reviews from \"../Reviews\";\r\n\r\nexport default function MovieDetailsPage() {\r\n  const { url } = useRouteMatch();\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [cast, setCast] = useState([]);\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchById() {\r\n      try {\r\n        const response = await fetch(`\r\nhttps://api.themoviedb.org/3/movie/${movieId}?api_key=f67f4d14d6b529f941fa4f285225b954&language=en-US`);\r\n        const json = await response.json();\r\n        if (json.status !== \"Released\") {\r\n          alert(\"error 404\");\r\n          return;\r\n        }\r\n        setMovie(json);\r\n      } catch (error) {\r\n        console.log(\"whoops\");\r\n      }\r\n    }\r\n    fetchById();\r\n  }, [movieId]);\r\n\r\n  const getCast = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=f67f4d14d6b529f941fa4f285225b954&language=en-US`\r\n      );\r\n      const json = await response.json();\r\n      const allCast = await json.cast;\r\n      setCast(allCast);\r\n    } catch (error) {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n\r\n  const getReviews = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=f67f4d14d6b529f941fa4f285225b954&language=en-US&page=1`\r\n      );\r\n      const json = await response.json();\r\n      const results = await json.results;\r\n      setReviews(results);\r\n    } catch (error) {\r\n      alert(\"всё пропало\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movie && (\r\n        <div>\r\n          <h2 className={style.title}>\r\n            {movie.original_title} (\r\n            <span>{movie.release_date.slice(0, 4)}</span>)\r\n          </h2>\r\n          <img\r\n            className={style.images}\r\n            src={\r\n              movie.poster_path\r\n                ? `https://www.themoviedb.org/t/p/w220_and_h330_face${movie.poster_path}`\r\n                : \"https://www.publicdomainpictures.net/pictures/280000/velka/not-found-image-15383864787lu.jpg\"\r\n            }\r\n            alt={movie.original_title}\r\n          />\r\n\r\n          <p>\r\n            rate: <span>{movie.vote_average}</span>\r\n          </p>\r\n          <p className={style.overview}>Overview </p>\r\n          <p>{movie.overview}</p>\r\n          <p className={style.overview}>Genres </p>\r\n          <ul>\r\n            {movie.genres.map(({ name }) => {\r\n              return (\r\n                <li key={name}>\r\n                  <span>{name}</span>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <p>Additional information</p>\r\n          <ul>\r\n            <li>\r\n              <NavLink\r\n                to={`${url}/cast`}\r\n                onClick={() => {\r\n                  getCast();\r\n                }}\r\n              >\r\n                Cast\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to={`${url}/reviews`}\r\n                onClick={() => {\r\n                  getReviews();\r\n                }}\r\n              >\r\n                Reviews\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <Switch>\r\n            <Route path={`${url}/cast`}>\r\n              {cast.length !== 0 ? <Cast cast={cast} /> : <p>Sorry, sorry, nothing was found</p>}\r\n            </Route>\r\n            <Route path={`${url}/reviews`}>\r\n              {reviews.length !== 0 ? <Reviews reviews={reviews}/> : <p>We don't have any reviews for this movie</p>}\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport HomePage from \"./Components/HomePage\";\nimport MoviesPage from \"./Components/MoviesPage\";\nimport Navigation from \"./Components/Navigation\";\nimport NotFoundView from \"./Components/NotFoundView\";\nimport MovieDetailsPage from \"./Components/MovieDetailsPage\";\n\nexport default function App() {\n  const [search, setSearch] = useState(\"\");\n  const [films, setFilms] = useState([]);\n  const [found, setFound] = useState([]);\n\n  useEffect(() => {\n    async function FetchPopularFilms() {\n      try {\n        const response = await fetch(\n          \"https://api.themoviedb.org/3/trending/all/day?api_key=f67f4d14d6b529f941fa4f285225b954\"\n        );\n        const json = await response.json();\n        const results = await json.results;\n        setFilms(results);\n      } catch (error) {\n        console.log(\"whoops\");\n      }\n    }\n    FetchPopularFilms();\n  }, []);\n\n  useEffect(() => {\n    async function FetchFilmsByRequest() {\n      if (search === \"\") return;\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/search/movie?api_key=f67f4d14d6b529f941fa4f285225b954&language=en-US&page=1&include_adult=false&query=${search}`\n        );\n        const json = await response.json();\n        const results = await json.results;\n        setFound(results);\n      } catch (error) {\n        console.log(\"whoops\");\n      }\n    }\n    FetchFilmsByRequest();\n  }, [search]);\n\n  const handleFormSubmit = (search) => {\n    setSearch(search);\n  };\n\n  return (\n    <>\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage films={films} />\n        </Route>\n\n        <Route path=\"/movies\" exact>\n          <MoviesPage onSubmit={handleFormSubmit} found={found} />\n        </Route>\n\n        <Route  path=\"/movies/:movieId\" >\n          <MovieDetailsPage/>\n        </Route>\n\n        <Route>\n          <NotFoundView />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}